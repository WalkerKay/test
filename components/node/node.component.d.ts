import { SimpleChanges, OnChanges, OnInit, ElementRef, ViewContainerRef, OnDestroy, QueryList, DoCheck, AfterViewInit, AfterViewChecked, IterableDiffers, IterableDiffer, NgZone } from '@angular/core';
import { Document, Selection, Editor, Block, Inline } from 'slate';
import { SlaNestedNodeRef } from '../../core/render-plugin/render-config';
import { ChildNodeBase } from '../../core/child-node-base';
import { SlaPluginRenderService } from '../../core/render-plugin/plugin-render-service';
export declare const nodeBinding: any;
export declare class SlaNodeComponent extends ChildNodeBase implements OnInit, OnDestroy, OnChanges, AfterViewInit, DoCheck, AfterViewChecked {
    private viewContainerRef;
    private elementRef;
    private slaPluginRenderService;
    private ngZone;
    private differs;
    internalNode: Block | Document | Inline;
    descendantRootNodes: HTMLElement[];
    rootNode: HTMLElement;
    nodeComponentRef: SlaNestedNodeRef;
    subSelections: any[];
    editor: Editor;
    selection: Selection;
    block: Block;
    index: number;
    nodeRef: (nodeRef: any) => {};
    readOnly: boolean;
    rendered: boolean;
    node: Block | Inline | Document;
    nodeRefs: QueryList<ChildNodeBase>;
    differ: IterableDiffer<ChildNodeBase>;
    constructor(viewContainerRef: ViewContainerRef, elementRef: ElementRef<any>, slaPluginRenderService: SlaPluginRenderService, ngZone: NgZone, differs: IterableDiffers);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    getRelativeRange(node: any, index: any, range: any): any;
    trackBy(index: any, node: any): string;
    render(): void;
    getNodeRef(index: number): ChildNodeBase;
    ngOnChanges(simpleChanges: SimpleChanges): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    memoSubNodes(): void;
}
